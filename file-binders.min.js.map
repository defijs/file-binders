{"version":3,"sources":["webpack://fileBinders/webpack/universalModuleDefinition","webpack://fileBinders/webpack/bootstrap","webpack://fileBinders/./src/_read-files.js","webpack://fileBinders/./src/_get-filereader-method-name.js","webpack://fileBinders/./src/dragover.js","webpack://fileBinders/./src/dropfiles.js","webpack://fileBinders/./src/file.js","webpack://fileBinders/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","files","fileReaderMethodName","callback","length","arrayOfFiles","Array","j","createLoadendHandler","_ref","file","reader","loadendHandler","readerResult","result","removeEventListener","FileReader","addEventListener","readAs","Error","methodName","toUpperCase","slice","on","getValue","domEvent","eventType","type","setValue","getFileReaderMethodName","dropHandler","dragoverHandler","event","preventDefault","dataTransfer","readFiles","createDropHandler","dropEffect","this","destroy","_ref2","fileChangeHandler","createFileChangeHandler","multiple","dropFiles","dragOver"],"mappings":"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","file":"file-binders.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fileBinders\"] = factory();\n\telse\n\t\troot[\"fileBinders\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export default function readFiles(files, fileReaderMethodName, callback) {\n    const { length } = files;\n    const arrayOfFiles = Array(length);\n    let j = 0;\n\n    function createLoadendHandler({\n        file,\n        reader\n    }) {\n        return function loadendHandler() {\n            file.readerResult = reader.result; // eslint-disable-line no-param-reassign\n            j += 1;\n            if (j === length) {\n                callback(arrayOfFiles);\n            }\n\n            reader.removeEventListener('loadend', loadendHandler);\n        };\n    }\n\n    if (fileReaderMethodName) {\n        for (let i = 0; i < length; i += 1) {\n            const reader = new window.FileReader();\n            const file = files[i];\n\n            arrayOfFiles[i] = file;\n\n            reader.addEventListener('loadend', createLoadendHandler({\n                file,\n                reader\n            }));\n\n            reader[fileReaderMethodName](file);\n        }\n    } else {\n        for (let i = 0; i < length; i += 1) {\n            arrayOfFiles[i] = files[i];\n        }\n\n        callback(arrayOfFiles);\n    }\n}\n","export default function getFileReaderMethodName(readAs) {\n    const { FileReader } = window;\n    /* istanbul ignore if  */\n    if (typeof FileReader === 'undefined') {\n        throw Error('FileReader is not supported by this browser');\n    }\n\n    const methodName = `readAs${readAs[0].toUpperCase()}${readAs.slice(1)}`;\n\n    if (!FileReader.prototype[methodName]) {\n        throw Error(`Method ${methodName} is not supported by FileReader`);\n    }\n\n    return methodName;\n}\n","export default function dragOver() {\n    return {\n        on: 'dragover dragenter dragleave dragend drop',\n        getValue({ domEvent }) {\n            const eventType = domEvent && domEvent.type;\n\n            return eventType === 'dragover' || eventType === 'dragenter';\n        },\n        setValue: null\n    };\n}\n","import getFileReaderMethodName from './_get-filereader-method-name';\nimport readFiles from './_read-files';\n\nfunction createDropHandler({\n    callback,\n    methodName\n}) {\n    return function dropHandler(event) {\n        event.preventDefault();\n        const { files } = event.dataTransfer;\n\n        readFiles(files, methodName, callback);\n    };\n}\n\nfunction createDragoverHandler() {\n    return function dragoverHandler(event) {\n        event.preventDefault();\n        if (event.dataTransfer) {\n            event.dataTransfer.dropEffect = 'copy'; // eslint-disable-line no-param-reassign\n        }\n    };\n}\n\nexport default function dropFilesBinder(readAs) {\n    const methodName = readAs ? getFileReaderMethodName(readAs) : null;\n    let dropHandler;\n    let dragoverHandler;\n\n    return {\n        on(callback) {\n            dropHandler = createDropHandler({\n                callback,\n                methodName\n            });\n            dragoverHandler = createDragoverHandler();\n\n            this.addEventListener('drop', dropHandler);\n            this.addEventListener('dragover', dragoverHandler);\n        },\n        destroy() {\n            this.removeEventListener('drop', dropHandler);\n            this.removeEventListener('dragover', dragoverHandler);\n        },\n        getValue({ domEvent }) {\n            return domEvent || [];\n        },\n        setValue: null\n    };\n}\n","import getFileReaderMethodName from './_get-filereader-method-name';\nimport readFiles from './_read-files';\n\nfunction createFileChangeHandler({\n    callback,\n    methodName\n}) {\n    return function fileChangeHandler() {\n        const { files } = this;\n\n        if (files.length) {\n            readFiles(files, methodName, callback);\n        } else {\n            callback([]);\n        }\n    };\n}\n\nexport default function fileBinder(readAs) {\n    const methodName = readAs ? getFileReaderMethodName(readAs) : null;\n    let fileChangeHandler;\n\n    return {\n        on(callback) {\n            fileChangeHandler = createFileChangeHandler({\n                callback,\n                methodName\n            });\n            this.addEventListener('change', fileChangeHandler);\n        },\n        destroy() {\n            this.removeEventListener('change', fileChangeHandler);\n        },\n        getValue({ domEvent }) {\n            const files = domEvent || [];\n            return this.multiple ? files : files[0] || null;\n        },\n        setValue: null\n    };\n}\n","import file from './file';\nimport dropFiles from './dropfiles';\nimport dragOver from './dragover';\n\n// export these binders in CJS environment\nmodule.exports = {\n    file,\n    dropFiles,\n    dragOver\n};\n"],"sourceRoot":""}